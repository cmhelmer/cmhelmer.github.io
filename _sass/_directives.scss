// Functions
// Includes (properties which belong together and need customization unlike placeholders)

// Remove length unit
@function strip-unit( $number ) {
	@return $number / ( $number * 0 + 1 );
}

// Consistent box styles
@mixin box( $background-color: $color-text-bg, $color: inherit ) {
	border-radius: $border-radius;
	background-color: $background-color;
	color: $color;
}

// Block-level boxes (blockquote, pre, etc.)
@mixin box-block( $background-color: $color-text-bg, $color: inherit ) {
	@include box( $background-color, $color );
	display: block;
	padding-left: $gap;
	padding-right: $gap;
	clear: left; // clear @include pull
	column-count: 1; // create block formatting context to contain child margins (someday contain: layout?)
}

// Span-level boxes (code, mark, etc.)
@mixin box-span( $background-color: $color-text-bg, $color: inherit, $fix-margin: false ) {
	@include box( $background-color, $color );
	padding-left: .3125rem;
	padding-right: .3125rem;
	box-decoration-break: clone; // pad wrapped lines
	@if $fix-margin {
		margin-left: -.3125rem;
		margin-right: -.3125rem;
	}
	@else {
		margin: 0;
	}
}

@mixin dim( $color: $color-text ) {
	color: rgba( $color, .55 );
}

// Default flexbox with fallback on flex items
@mixin flex {
	display: flex;
	flex-wrap: wrap;
	justify-content: space-between;
	align-items: first baseline;

	> * {
		display: inline-block;
		vertical-align: top; // equivalent to first baseline if vertical rhythm kept
		margin-top: 0; // override, because flex messes up collapsing margin, rely on children
		margin-bottom: 0; // override, because flex messes up collapsing margin, rely on children
	}
}

// Font treatment for body
@mixin font-body {
	font-family: $font-body;
	// font-kerning: normal;
	hyphens: auto;
	// word-wrap: break-word; // alias of overflow-wrap but with Edge support
	hanging-punctuation: first last allow-end;
	@include font-feature-settings( onum, pnum ); // old-style, proportional numbers
}

// Font treatment for headings
@mixin font-display {
	font-family: "Source Serif", "Source Serif Pro", $font-body;
	font-weight: 700;   // bold
	font-style: normal; // force, "Source Serif Pro" has no italics (yet)
}

// OpenType features
@mixin font-feature-settings( $features... ) {
	$font-feature-settings: ();

	@each $feature in $features {
		$font-feature-settings: append( $font-feature-settings, '#{$feature}' 1, comma );
	}

	font-feature-settings: $font-feature-settings;
	// Recommended when Jekyll sass compiler doesn't choke on @supports
	/*
	@supports (font-variant-*: ...) {
		font-feature-settings: normal;
		font-variant-*: ...;
	}
	*/
}

// Font treatment for fixed-width
@mixin font-fixed {
	font-family: "Source Code", "Source Code Pro", monospace;
	@include font-small;
	@include font-feature-settings( lnum, tnum ); // lining, tabular numbers
	hanging-punctuation: none;
	hyphens: none;
}

@mixin font-size-fluid( $font-sizes ) {
	$font-size-min: map-get( $font-sizes, "min" );
	$font-size-responsive: map-get( $font-sizes, "responsive" );
	$font-size-max: map-get( $font-sizes, "max" );

	font-size: $font-size-min;

	@media screen and (min-width: $width-min) {
		font-size: ( ( $font-size-max + $font-size-min ) / 2 ); // fallback to average of min and max
		font-size: $font-size-responsive;
	}

	@media screen and (min-width: $width-max) {
		font-size: $font-size-max;
	}
}

// Font treatment pull quotes and inline page names
@mixin font-lift {
	font-family: "Source Serif", "Source Serif Pro", $font-body;
	font-weight: 400;   // regular
	font-style: normal; // force, "Source Serif Pro" has no italics (yet)
}

// Maintain vertical rhythm
@mixin font-size( $factor: 1, $line-height: $interval ) {
	font-size: $factor * 1em;
	@if $line-height < $factor {
		line-height: 1; // floor
	}
	@else {
		line-height: ( $line-height / $factor );
	}
}

// Small font size
@mixin font-small( $line-height: $interval ) {
	@include font-size( $font-size-small, $line-height );
}

// Small-caps
@mixin font-smcp {
	font-family: $font-body; // must have OpenType features
	@include font-feature-settings( smcp, c2sc, lnum ); // small-caps, capitals-to-small-caps, lining numbers
	text-transform: uppercase; // fallback
	letter-spacing: .0625em;
	font-weight: normal; // only regular weight has small-caps (can be overridden for faux bold)

	em, cite {
		font-style: normal; // override default
		font-weight: bolder; // will be faux bold
	}
}

// Font treatment for site title (logo)
@mixin font-title {
	font-family: "Source Serif Title", "Source Serif Pro", $font-body;
	font-weight: 900;
	// font-kerning: none;
	word-spacing: -.125em;
	letter-spacing: -.015625em;
}

// Remove custom base styles from ol, ul
@mixin list-none {
	padding-left: 0;
	padding-right: 0;

	li::before {
		display: none;
	}
}

// Set the measure and center content elements
@mixin measure( $factor: 1 ) {
	@include max-width( $measure * $factor );
}

// Set max-width with auto margins for centering
@mixin max-width( $width: $measure ) {
	max-width: $width;
	margin-left: auto;
	margin-right: auto;
}

// Pull block into margin
@mixin pull {
	max-width: 14.5rem; // to taste
	min-width: 6.5rem; // looks
	margin-top: 0;
}

// Pull quotes, asides towards right
@mixin pull-quote {
	@include pull;
	float: right;
	clear: right; // in case of subsequent floats
	margin-left: $gap;
}

// Pull titles toward left margin
@mixin pull-title {
	@include pull;
	float: left;
	clear: left; // in case of subsequent floats
	margin-right: $gap;
}

// Scrolling hints (horizontal)
// Bug in iOS?
@mixin scrolling-hints( $color: $color-bg ) {
	overflow-x: auto;
	overflow-y: hidden; // prevent vertical overflow-scrolling; side-effects?
	background-image:
		linear-gradient( to right, $color 50%, rgba( $color, 0 ) ),
		radial-gradient( at left, $color-text-bg, rgba( $color-text-bg, 0 ) 70% ),
		linear-gradient( to left, $color 50%, rgba( $color, 0 ) ),
		radial-gradient( at right, $color-text-bg, rgba( $color-text-bg, 0 ) 70% );
	background-repeat: no-repeat;
	background-size: ( $gap * 1.5 ) 100%, ( $gap / 2 ) 100%, ( $gap * 1.5 ) 100%, ( $gap / 2 ) 100%;
	background-position: left, left, right, right;
	background-attachment: local, scroll, local, scroll;
}

// Position sticky headers
@mixin sticky {
	position: -webkit-sticky; // not picked up by prefixfree.js
	position: sticky;
	z-index: 10000;
	top: 0;
	background-color: $color-bg;
/*
	&::before { // avoid Safari layering bug (it's still happening...)
		content: "";
		position: absolute;
		z-index: -1;
		top: 0;
		left: 0;
		right: 0;
		bottom: 0;
		background-color: $color-bg;
	}
*/
}

// Inline (text) overflow
@mixin text-overflow {
	text-overflow: ellipsis;
	white-space: nowrap; // required for text-overflow
	overflow: hidden; // required for text-overflow
	hanging-punctuation: none; // because of hidden overflow
}
